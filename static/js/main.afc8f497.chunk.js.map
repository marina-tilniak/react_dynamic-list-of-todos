{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","state","todoTitle","status","handleSearchInput","event","setState","target","value","getFilteredTodo","filteredTodosByTitle","props","todos","filter","todo","title","includes","completed","handleSelectChange","selectUser","this","visibleTodos","className","type","onChange","map","ClassNames","htmlFor","readOnly","checked","id","onClick","userId","React","Component","CurrentUser","user","a","loadData","fetch","then","response","json","clearSelectedUser","name","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"uXAcaA,EAAb,4MACEC,MAAe,CACbC,UAAW,GACXC,OAAQ,OAHZ,EAMEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEJ,UAAWG,EAAME,OAAOC,SAP5C,EAUEC,gBAAkB,WAChB,IAAMC,EAAuB,EAAKC,MAAMC,MACrCC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,SAAS,EAAKf,MAAMC,cAEjD,MAA0B,WAAtB,EAAKD,MAAME,OACNO,EAAqBG,QAAO,SAAAC,GAAI,OAAKA,EAAKG,aAGzB,cAAtB,EAAKhB,MAAME,OACNO,EAAqBG,QAAO,SAAAC,GAAI,OAAIA,EAAKG,aAG3CP,GAtBX,EAyBEQ,mBAAqB,SAACb,GACpB,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAAOC,SA1BzC,4CA6BE,WACE,IAAQW,EAAeC,KAAKT,MAApBQ,WACR,EAA8BC,KAAKnB,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACbkB,EAAeD,KAAKX,kBAE1B,OACE,sBAAKa,UAAU,WAAf,UACE,wCAEA,uBACEC,KAAK,OACLD,UAAU,QACVd,MAAON,EACPsB,SAAUJ,KAAKhB,oBAEjB,yBACEI,MAAOL,EACPqB,SAAUJ,KAAKF,mBACfI,UAAU,qBAHZ,UAKE,wBAAQd,MAAM,MAAd,sBACA,wBAAQA,MAAM,YAAd,4BACA,wBAAQA,MAAM,SAAd,4BAGF,qBAAKc,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGD,EAAaI,KAAI,SAAAX,GAAI,OACpB,qBACEQ,UAAWI,IAAW,iBACpB,CACE,0BAA2BZ,EAAKG,UAChC,6BAA8BH,EAAKG,YAJzC,UAQE,wBAAOU,QAAQ,OAAf,UACE,uBACEJ,KAAK,WACLK,UAAQ,EACRC,QAASf,EAAKG,UACda,GAAG,SAEL,4BAAIhB,EAAKC,WAGX,wBACEO,UAAU,iEAKVC,KAAK,SACLQ,QAAS,kBAAMZ,EAAWL,EAAKkB,SAPjC,yBASYlB,EAAKkB,YArBZlB,EAAKgB,kBA/D1B,GAA8BG,IAAMC,WCDvBC,G,MAAb,4MACElC,MAAe,CACbmC,KAAM,MAFV,8FAKE,sBAAAC,EAAA,sDACEjB,KAAKkB,WADP,gDALF,6HASE,WAAyB3B,GAAzB,SAAA0B,EAAA,sDACM1B,EAAMqB,SAAWZ,KAAKT,MAAMqB,QAC9BZ,KAAKkB,WAFT,gDATF,oHAeE,4BAAAD,EAAA,sEClB6BL,EDmBOZ,KAAKT,MAAMqB,OClBxCO,MAAM,GAAD,OAVO,4CAUP,OAAmBP,IAC5BQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDgB7B,OACQN,EADR,OAGEhB,KAAKd,SAAS,CAAE8B,SAHlB,iCClB4B,IAACJ,IDkB7B,YAfF,0EAqBE,WACE,IAAQI,EAAShB,KAAKnB,MAAdmC,KACAO,EAAsBvB,KAAKT,MAA3BgC,kBAER,OAAKP,EAKH,sBAAKd,UAAU,cAAf,UACE,wBACEC,KAAK,SACLD,UAAU,kBACVS,QAASY,EAHX,mBAOA,oBAAIrB,UAAU,qBAAd,SAAmC,wDAAyBc,EAAKN,QAEjE,oBAAIR,UAAU,oBAAd,SAAmCc,EAAKQ,OACxC,mBAAGtB,UAAU,qBAAb,SAAmCc,EAAKS,QACxC,mBAAGvB,UAAU,qBAAb,SAAmCc,EAAKU,WAhBnC,yBA1Bb,GAAiCb,IAAMC,YEAjCa,E,4MACJ9C,MAAe,CACb+C,eAAgB,EAChBpC,MAAO,I,EASTO,WAAa,SAACa,GACZ,EAAK1B,SAAS,CAAE0C,eAAgBhB,K,EAGlCW,kBAAoB,WAClB,EAAKrC,SAAS,CAAE0C,eAAgB,K,8FAXlC,4BAAAX,EAAA,sEDdEE,MALa,2CAMVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCa/B,OACQ9B,EADR,OAGEQ,KAAKd,SAAS,CAAEM,UAHlB,gD,0EAcA,WACE,MAAkCQ,KAAKnB,MAA/B+C,EAAR,EAAQA,eAAgBpC,EAAxB,EAAwBA,MAExB,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEV,MAAOA,EACPO,WAAYC,KAAKD,eAIrB,qBAAKG,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACG0B,EACC,cAAC,EAAD,CAAahB,OAAQgB,EAAgBL,kBAAmBvB,KAAKuB,oBAC3D,8B,GApCEV,IAAMC,WA4CTa,ICtDfE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.afc8f497.chunk.js","sourcesContent":["import React from 'react';\nimport ClassNames from 'classnames';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (userId: number) => void,\n};\n\ntype State = {\n  todoTitle: string,\n  status: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    todoTitle: '',\n    status: 'all',\n  };\n\n  handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ todoTitle: event.target.value });\n  };\n\n  getFilteredTodo = (): Todo[] => {\n    const filteredTodosByTitle = this.props.todos\n      .filter(todo => todo.title.includes(this.state.todoTitle));\n\n    if (this.state.status === 'active') {\n      return filteredTodosByTitle.filter(todo => !todo.completed);\n    }\n\n    if (this.state.status === 'completed') {\n      return filteredTodosByTitle.filter(todo => todo.completed);\n    }\n\n    return filteredTodosByTitle;\n  };\n\n  handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ status: event.target.value });\n  };\n\n  render() {\n    const { selectUser } = this.props;\n    const { todoTitle, status } = this.state;\n    const visibleTodos = this.getFilteredTodo();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={todoTitle}\n          onChange={this.handleSearchInput}\n        />\n        <select\n          value={status}\n          onChange={this.handleSelectChange}\n          className=\"select is-link m-3\"\n        >\n          <option value=\"all\">Show all</option>\n          <option value=\"completed\">Show completed</option>\n          <option value=\"active\">Show active</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                className={ClassNames('TodoList__item',\n                  {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  })}\n                key={todo.id}\n              >\n                <label htmlFor=\"todo\">\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                    id=\"todo\"\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getUserDetails } from '../../api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  clearSelectedUser: () => void,\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component <Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.loadData();\n  }\n\n  async componentDidUpdate(props: Props) {\n    if (props.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUserDetails(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearSelectedUser } = this.props;\n\n    if (!user) {\n      return 'User is not chosen';\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <button\n          type=\"button\"\n          className=\"button is-small\"\n          onClick={clearSelectedUser}\n        >\n          Clear\n        </button>\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user.id}`}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    );\n  }\n}\n","const todosUrl = 'https://mate.academy/students-api/todos';\nconst userTodosUrl = 'https://mate.academy/students-api/users/';\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return (\n    fetch(todosUrl)\n      .then(response => response.json())\n  );\n};\n\nexport const getUserDetails = (userId: number): Promise<User> => {\n  return fetch(`${userTodosUrl}${userId}`)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ninterface State {\n  selectedUserId: number,\n  todos: Todo[],\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  clearSelectedUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearSelectedUser={this.clearSelectedUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}